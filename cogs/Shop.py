import disnake
from disnake.ext import commands
import sqlite3

conn = sqlite3.connect('inventory.db')
cursor = conn.cursor()

cursor.execute("""
CREATE TABLE IF NOT EXISTS inventory (
    user_id INTEGER,
    item_name TEXT,
    amount INTEGER,
    PRIMARY KEY(user_id, item_name)
)
""")

conn.commit()

ITEM_ROLES = {
    1000: 1277235825830264912, # —Ä–æ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "–ö–æ–º–∞—Ä—É —Ñ–∞–Ω"
    2000: 1266857840732143697, # —Ä–æ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "–í–ª–∞–¥–µ–ª–µ—Ü –±–ª–æ–≥–∞"
    3000: 1278746391149154409, # —Ä–æ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—è–¥–∫–∞"
    5000: 1371104857775411251, # —Ä–æ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "–í–∞–∂–Ω—ã–π –≥–æ—Å—Ç—å"
    6500: 1371104483928440852, # —Ä–æ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "–î–∏–ø–ª–æ–º–∞—Ç"
    8000: 1278746179206910053, # —Ä–æ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "–ö–∞–ø–∏—Ç–∞–ª–∏—Å—Ç"
    10000: 1371105385917845564, # —Ä–æ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "–ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç"
    30000: 1371105600204701829, # —Ä–æ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å —ç–∫–æ–Ω–æ–º–∏–∫–∏"
}

ITEM_NAMES = {
    10: '–í–æ–∑–¥—É—Ö',
    100: '–ö–æ—Å—Ç—é–º –≥–æ—Ä–Ω–∏—á–Ω–æ–π',
    1000: '–ö–æ–º–∞—Ä—É —Ñ–∞–Ω',
    2000: '–í–ª–∞–¥–µ–ª–µ—Ü –±–ª–æ–≥–∞',
    3000: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—è–¥–∫–∞',
    5000: '–í–∞–∂–Ω—ã–π –≥–æ—Å—Ç—å',
    6500: '–î–∏–ø–ª–æ–º–∞—Ç',
    8000: '–ö–∞–ø–∏—Ç–∞–ª–∏—Å—Ç',
    10000: '–ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç',
    30000: '–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å —ç–∫–æ–Ω–æ–º–∏–∫–∏'
}

ITEM_EMOJIS = {
    '–í–æ–∑–¥—É—Ö': 'üí®',
    '–ö–æ—Å—Ç—é–º –≥–æ—Ä–Ω–∏—á–Ω–æ–π': 'üëó',
    '–ö–æ–º–∞—Ä—É —Ñ–∞–Ω': 'üéß',
    '–í–ª–∞–¥–µ–ª–µ—Ü –±–ª–æ–≥–∞': 'üìù',
    '–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—è–¥–∫–∞': 'üõ°',
    '–í–∞–∂–Ω—ã–π –≥–æ—Å—Ç—å': 'üëî',
    '–î–∏–ø–ª–æ–º–∞—Ç': 'üíº',
    '–ö–∞–ø–∏—Ç–∞–ª–∏—Å—Ç': 'üí∞',
    '–ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç': 'üé©',
    '–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å —ç–∫–æ–Ω–æ–º–∏–∫–∏': 'üëë'
}

class Shop(commands.Cog):

    def __init__(self, bot):
        self.bot = bot

    def add_to_inventory(self, user_id: int, item_name: str, amount: int):
        cursor.execute(
            "SELECT amount FROM inventory WHERE user_id = ? AND item_name = ?",
            (user_id, item_name)
        )
        result = cursor.fetchone()

        if result:
            new_amount = result[0] + amount
            cursor.execute(
                "UPDATE inventory SET amount = ? WHERE user_id = ? AND item_name = ?",
                (new_amount, user_id, item_name)
            )
        else:
            cursor.execute(
                "INSERT INTO inventory (user_id, item_name, amount) VALUES (?, ?, ?)",
                (user_id, item_name, amount)
            )
        conn.commit()

    def get_inventory(self, user_id: int):
        cursor.execute(
            "SELECT item_name, amount FROM inventory WHERE user_id = ?",
            (user_id,)
        )
        return cursor.fetchall()

    @commands.slash_command(name='inventory', description='–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')
    async def inventory(self, ctx, member: disnake.Member = None):
        target = member or ctx.author
        target = member or ctx.author  
        target_name = member.display_name if member else member.display_name  
        user_id = target.id  
        items = self.get_inventory(user_id)

        if not items:
            embed = disnake.Embed(
                title=f'–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å {target_name}', 
                description='üì¶–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.',
                color=0xFFFFFF
                )
            await ctx.response.send_message(embed=embed)
            return

        embed = disnake.Embed(
            title=f'–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å {ctx.author.display_name}', 
            description=None,
            color=0xFFFFFF
            )
        for item_name, amount in items:
            emoji = ITEM_EMOJIS.get(item_name, '')
            embed.add_field(name=f'{emoji} {item_name}', value=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:\n```{amount}```', inline=False)

        if ctx.author.id != target.id:
            await ctx.response.send_message(embed=embed)
            return

        view = ItemDropdownView(self.bot, user_id, items)
        await ctx.response.send_message(embed=embed, view=view)

    @commands.slash_command(name='shop', description='–ú–∞–≥–∞–∑–∏–Ω')
    async def shop(self, ctx):
        embed = disnake.Embed(
            title='–ú–∞–≥–∞–∑–∏–Ω watershop',
            color=0xFFFFFF
        )
        embed.add_field(
            name='üí® –í–æ–∑–¥—É—Ö ‚Äî 10üìº',
            value='–ß–∏—Å—Ç—ã–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π\n',
            inline=False
        )
        embed.add_field(
            name='üëó –ö–æ—Å—Ç—é–º –≥–æ—Ä–Ω–∏—á–Ω–æ–π ‚Äî 100üìº',
            value='–û–Ω–æ —Ç–µ–±–µ –Ω–∞–¥–æ?\n',
            inline=False
        )
        embed.add_field(
            name='üéß –ö–æ–º–∞—Ä—É —Ñ–∞–Ω ‚Äî 1000üìº',
            value='–õ—é–±–∏—à—å –ö–æ–º–∞—Ä—É?\n',
            inline=False
        )
        embed.add_field(
            name='üìù –í–ª–∞–¥–µ–ª–µ—Ü –±–ª–æ–≥–∞ ‚Äî 2000üìº',
            value='–ë–ª–æ–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n',
            inline=False
        )
        embed.add_field(
            name='üõ° –•—Ä–∞–Ω–∏—Ç–µ–ª—å –ü–æ—Ä—è–¥–∫–∞ ‚Äî 3000üìº',
            value='–ù–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, –Ω–æ –±—É–¥—Ç–æ –∏–º —Ä–æ–¥–∏–ª—Å—è\n',
            inline=False
        )
        embed.add_field(
            name='üëî –í–∞–∂–Ω—ã–π –≥–æ—Å—Ç—å ‚Äî 5000üìº',
            value='–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–π–Ω–∞–º\n',
            inline=False
        )
        embed.add_field(
            name='üíº –î–∏–ø–ª–æ–º–∞—Ç ‚Äî 6500üìº',
            value='–£–º–µ–µ—Ç —Ä–µ—à–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –±–µ–∑ –º—å—é—Ç–æ–≤ –∏ –±–∞–Ω–æ–≤\n',
            inline=False
        )
        embed.add_field(
            name='üí∞ –ö–∞–ø–∏—Ç–∞–ª–∏—Å—Ç ‚Äî 8000üìº',
            value='–ï—Å–ª–∏ —Ç—ã —á–∏—Ç–∞–µ—à—å —ç—Ç–æ ‚Äî –æ–Ω —É–∂–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ —Ç–µ–±–µ\n',
            inline=False
        )
        embed.add_field(
            name='üé© –ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç ‚Äî 15000üìº',
            value='–ü–∏—à–µ—Ç —Ç–æ–ª—å–∫–æ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã –∏ —Å—Ç–∞–≤–∏—Ç —Ç–æ—á–∫—É –≤ –∫–æ–Ω—Ü–µ.\n',
            inline=False
        )
        embed.add_field(
            name='üëë –ü–æ–≤–µ–ª–∏—Ç–µ–ª—å —ç–∫–æ–Ω–æ–º–∏–∫–∏ ‚Äî 30000üìº',
            value='–ë–æ–≥–∞—Ç–µ–π—à–∏–π —á–µ–ª–æ–≤–µ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n',
            inline=False
        )
        embed.add_field(name='\u200b', value='\u200b', inline=True)
        embed.add_field(name='\u200b', value='\u200b', inline=True)

        view = DropdownView(self.bot)
        await ctx.response.send_message(embed=embed, view=view)

class Dropdown(disnake.ui.StringSelect):
    def __init__(self, bot):
        self.bot = bot
        options = [
            disnake.SelectOption(label='üí® –í–æ–∑–¥—É—Ö ‚Äî 10üìº', description='–ß–∏—Å—Ç—ã–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π', value='10'),
            disnake.SelectOption(label='üëó –ö–æ—Å—Ç—é–º –≥–æ—Ä–Ω–∏—á–Ω–æ–π ‚Äî 100üìº', description='–û–Ω–æ —Ç–µ–±–µ –Ω–∞–¥–æ?', value='100'),
            disnake.SelectOption(label='üéß –ö–æ–º–∞—Ä—É —Ñ–∞–Ω ‚Äî 1000üìº', description='–õ—é–±–∏—à—å –ö–æ–º–∞—Ä—É?', value='1000'),
            disnake.SelectOption(label='üìù –í–ª–∞–¥–µ–ª–µ—Ü –±–ª–æ–≥–∞ ‚Äî 2000üìº', description='–ë–ª–æ–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ', value='2000'),
            disnake.SelectOption(label='üõ° –•—Ä–∞–Ω–∏—Ç–µ–ª—å –ü–æ—Ä—è–¥–∫–∞ ‚Äî 3000üìº', description='–ù–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, –Ω–æ –±—É–¥—Ç–æ –∏–º —Ä–æ–¥–∏–ª—Å—è', value='3000'),
            disnake.SelectOption(label='üëî –í–∞–∂–Ω—ã–π –≥–æ—Å—Ç—å ‚Äî 5000üìº', description='–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–π–Ω–∞–º', value='5000'),
            disnake.SelectOption(label='üíº –î–∏–ø–ª–æ–º–∞—Ç ‚Äî 6500üìº', description='–†–µ—à–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –±–µ–∑ –º—å—é—Ç–æ–≤ –∏ –±–∞–Ω–æ–≤', value='6500'),
            disnake.SelectOption(label='üí∞ –ö–∞–ø–∏—Ç–∞–ª–∏—Å—Ç ‚Äî 8000üìº', description='–û–Ω —É–∂–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ —Ç–µ–±–µ', value='8000'),
            disnake.SelectOption(label='üé© –ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç ‚Äî 15000üìº', description='–ü–∏—à–µ—Ç —Ç–æ–ª—å–∫–æ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã –∏ —Ç–æ—á–∫–æ–π', value='10000'),
            disnake.SelectOption(label='üëë –ü–æ–≤–µ–ª–∏—Ç–µ–ª—å —ç–∫–æ–Ω–æ–º–∏–∫–∏ ‚Äî 30000üìº', description='–ë–æ–≥–∞—Ç–µ–π—à–∏–π —á–µ–ª–æ–≤–µ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ', value='30000'),
        ]
        super().__init__(
            placeholder='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏',
            options=options
        )

    async def callback(self, ctx: disnake.MessageInteraction):
        economy = self.bot.get_cog('Economy')
        price = int(self.values[0])
        user_balance = economy.get_balance(ctx.author.id)
        
        if user_balance >= price:
            formatted_balance = economy.format_balance(economy.update_balance(ctx.author.id, -price))

            item_name = ITEM_NAMES.get(price)

            shop_cog = self.bot.get_cog('Shop')
            if shop_cog:
                shop_cog.add_to_inventory(ctx.author.id, item_name, 1)

            item_name = ITEM_NAMES.get(price)
            emoji = ITEM_EMOJIS.get(item_name, '')

            embed = disnake.Embed(
                title='–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!',
                description=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–∫—É–ø–∫–æ–π {emoji} **{item_name}**! –ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç /inventory\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ```{formatted_balance}```',
                color=0xFFFFFF
            )
            await ctx.response.send_message(embed=embed)

        else:
            formatted_balance = economy.format_balance(user_balance)
            embed = disnake.Embed(
                title='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!',
                description=f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ```{formatted_balance}```',
                color=0xFFFFFF
            )
            await ctx.response.send_message(embed=embed, ephemeral=True)

    async def economy_error(self, ctx, error):
        if isinstance(error, commands.CommandError):
            embed = disnake.Embed(
                title='–û—à–∏–±–∫–∞',
                description='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–π –ø–æ–∫—É–ø–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.',
                color=0xFFFFFF
            )
            await ctx.response.send_message(embed=embed, ephemeral=True)

class DropdownView(disnake.ui.View):
    def __init__(self, bot):
        super().__init__()
        self.add_item(Dropdown(bot))

class ItemDropdown(disnake.ui.StringSelect):
    def __init__(self, bot, user_id, items):
        self.bot = bot
        self.user_id = user_id

        options = [
            disnake.SelectOption(
                label=f'{ITEM_EMOJIS.get(name, "")} {name}',
                value=str(price), 
                description=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount}'
            ) for name, amount in items if amount > 0 and (price := next((price for price, item in ITEM_NAMES.items() if item == name), None)) is not None
        ]

        super().__init__(
            placeholder='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç',
            options=options
        )

    async def callback(self, ctx):
        shop_cog = self.bot.get_cog('Shop')

        if not shop_cog:
            await ctx.response.send_message("–û—à–∏–±–∫–∞: Shop cog –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            return

        price = int(self.values[0])  
        item_name = ITEM_NAMES.get(price)

        cursor.execute("SELECT amount FROM inventory WHERE user_id = ? AND item_name = ?", (self.user_id, item_name))
        result = cursor.fetchone()

        if result and result[0] > 0:
            new_amount = result[0] - 1

            if new_amount == 0:
                cursor.execute("DELETE FROM inventory WHERE user_id = ? AND item_name = ?", (self.user_id, item_name))
            else:
                cursor.execute("UPDATE inventory SET amount = ? WHERE user_id = ? AND item_name = ?", (new_amount, self.user_id, item_name))
            conn.commit()

            role_id = ITEM_ROLES.get(price)
            role = ctx.guild.get_role(role_id)
            if role:
                await ctx.author.add_roles(role)

            emoji = ITEM_EMOJIS.get(item_name, '')
            embed = disnake.Embed(
                title='–ü—Ä–µ–¥–º–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω',
                description=f'–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ {emoji} **{item_name}**!',
                color=0xFFFFFF
            )
            await ctx.response.send_message(embed=embed)

class ItemDropdownView(disnake.ui.View):
    def __init__(self, bot, user_id, items):
        super().__init__()
        self.add_item(ItemDropdown(bot, user_id, items))

def setup(bot):
    bot.add_cog(Shop(bot))